plugins {
	id "java-library"
	id "org.springframework.boot.auto-configuration"
	id "org.springframework.boot.configuration-properties"
	id "org.springframework.boot.deployed"
	id "org.springframework.boot.optional-dependencies"
}

description = "Spring Boot Hibernate"

dependencies {
	api(project(":spring-boot-project:spring-boot-jpa"))
	api("org.hibernate.orm:hibernate-core")
	api("org.springframework:spring-orm")

	optional(project(":spring-boot-project:spring-boot-autoconfigure"))
	optional(project(":spring-boot-project:spring-boot-metrics"))
	optional("org.hibernate.orm:hibernate-micrometer")

	testImplementation(project(":spring-boot-project:spring-boot-flyway"))
	testImplementation(project(":spring-boot-project:spring-boot-liquibase"))
	testImplementation(project(":spring-boot-project:spring-boot-test"))
	testImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support"))
	testImplementation(testFixtures(project(":spring-boot-project:spring-boot-autoconfigure")))
	testImplementation("com.zaxxer:HikariCP")
	testImplementation("javax.cache:cache-api")
	testImplementation("org.ehcache:ehcache") {
		artifact {
			classifier = 'jakarta'
		}
	}
	testImplementation("jakarta.servlet:jakarta.servlet-api")
	testImplementation("org.hibernate.orm:hibernate-envers")
	testImplementation("org.hibernate.orm:hibernate-jcache")
	testImplementation("org.springframework:spring-context-support")
	testImplementation("org.springframework:spring-webmvc")

	testRuntimeOnly("ch.qos.logback:logback-classic")
	testRuntimeOnly("com.h2database:h2")
}
